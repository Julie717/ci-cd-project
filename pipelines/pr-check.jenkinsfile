pipeline {
    agent { label 'Node_02' }
     parameters {
         string(name: 'app_branch', defaultValue: 'master', description: 'Application branch')
     }
     environment {
         DOCKERHUB_CREDENTIALS = credentials('dockerhub_credentials')
     }
     options {
         buildDiscarder(logRotator(numToKeepStr:'5'))
     }
     stages {
         stage('Clone repository') {
             steps {
                 git url: 'https://github.com/Julie717/gift-certificates', branch: "${params.app_branch}"
             }
         }
         stage('Validate Dockerfile'){
             steps {
                 sh """
                 docker pull hadolint/hadolint:latest-alpine
                 docker run --rm -i hadolint/hadolint < Dockerfile
                 """
             }
         }
         stage('Build image') {
             steps {
                 sh "docker build -t $DOCKERHUB_CREDENTIALS_USR/gift-certificates:$BUILD_NUMBER --target builder ."
                 sh "docker build -t $DOCKERHUB_CREDENTIALS_USR/gift-certificates:$BUILD_NUMBER --target java ."
             }
         }
         stage('Unit tests') {
             steps {
                 sh "docker build --target test ."
             }
         }
    }
    post {
         always {
            sh 'docker image prune --all --force'
            sh 'docker builder prune -f'
            sh 'docker logout'
         }
         failure {
            slackSend (channel: 'app', color: '#FF0000', message: "PR check failed: '${JOB_NAME} [${BUILD_NUMBER}]' (${BUILD_URL})")
         }
    }
}
