pipeline {
    agent { label 'Node_02' }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub_credentials')
    }
    options {
        buildDiscarder(logRotator(numToKeepStr:'5'))
    }
    stages {
        stage('Clone repository') {
            steps {
                git url: 'https://github.com/Julie717/gift-certificates', branch: "${params.BRANCH}"
            }
        }
        stage('Validate Dockerfile'){
            steps {
                sh """
                docker pull hadolint/hadolint:latest-alpine
                docker run --rm -i hadolint/hadolint < Dockerfile
                """
            }
        }
        stage('Build image') {
            steps {
                sh "docker build -t $DOCKERHUB_CREDENTIALS_USR/gift-certificates:$BUILD_NUMBER --target image_build ."
                sudo docker build -t web --target test .
            }
        }
        stage('Unit tests') {
            steps {
                sh "docker build -t web --target test ."
            }
        }
        stage('sonarqube') {
            environment {
                scannerHome = tool 'SonarScanner'
            }
            steps {
                withSonarQubeEnv('sonarqube') {
                    bat "${scannerHome}/bin/sonar-scanner"
                }
            }
        }
        stage('Login to Docker Hub') {
            steps {
                sh """
	            echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
                echo 'Login Completed'
                """
            }
        }
        stage('Push Image to Docker Hub') {
            steps {
                sh """
	            docker push $DOCKERHUB_CREDENTIALS_USR/gift-certificates:$BUILD_NUMBER
	            echo 'Push Image Completed'
	            """
	        }
        }
    post {
         always {
            sh 'docker logout'
         }
    }
}
